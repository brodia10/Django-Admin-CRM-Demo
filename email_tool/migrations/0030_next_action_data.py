# Generated by Django 3.0.7 on 2021-03-24 21:37

from django.db import migrations


def forward_migration(apps, schema_editor):
    print()
    print("*** Next Action Item Migration ***")
    print("Running...")
    db_alias = schema_editor.connection.alias
    Customer = apps.get_model("email_tool", "Customer")
    NextActionItem = apps.get_model("email_tool", "NextActionItem")

    customers = (
        Customer.objects.using(db_alias)
        .exclude(next_action_item__isnull=True)
        .exclude(next_action_item__exact="")
        .filter(target_date__isnull=False)
        .all()
    )
    success_count = 0
    failures = []
    for customer in customers:
        try:
            NextActionItem.objects.using(db_alias).create(
                customer=customer,
                assignee=customer.assignee,
                target_date=customer.target_date,
                description=customer.next_action_item,
            )
            success_count += 1
        except Exception:
            failures.append(customer)

    print("=== Results ===")
    print(f"Success: {success_count}")
    print(f"Failures: {len(failures)}")
    if len(failures) > 0:
        print("Failing Cases:")
        for customer in failures:
            print(f"CustomerId: {customer.id} Company: {customer.company}")
    print()
    print("Migration complete.")
    print()


def reverse_migration(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    NextActionItem = apps.get_model("email_tool", "NextActionItem")
    NextActionItem.objects.using(db_alias).all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("email_tool", "0029_next_action_item"),
    ]

    operations = [
        migrations.RunPython(forward_migration, reverse_migration),
    ]
